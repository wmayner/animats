# PyPhi configuration
# ~~~~~~~~~~~~~~~~~~~
# See the documentation for ``pyphi.config`` for more info.
---

# Theoretical approximations
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
# In certain cases, making a cut can actually cause a previously reducible
# concept to become a proper, irreducible concept. Assuming this can never
# happen can increase performance significantly, however the obtained results
# are not strictly accurate.
ASSUME_CUTS_CANNOT_CREATE_NEW_CONCEPTS: false

# System resources
# ~~~~~~~~~~~~~~~~
# Controls whether cuts are evaluated in parallel, which requires more
# memory. If cuts are evaluated sequentially, only two BigMips need to be
# in memory at a time.
PARALLEL_CUT_EVALUATION: true
# The number of CPU cores to use in parallel cut evaluation. -1 means all
# available cores, -2 means all but one available cores, etc.
NUMBER_OF_CORES: -1
# The verbosity of parallel computation (integer from 0 to 100).
PARALLEL_VERBOSITY: 0
# Some functions are memoized using an in-memory cache. This is the maximum
# percentage of memory that these caches can collectively use.
MAXIMUM_CACHE_MEMORY_PERCENTAGE: 50

# Caching
# ~~~~~~~
# Controls whether BigMips are cached and retreived.
CACHE_BIGMIPS: false
# Controls whether concepts are cached. Note that concept caching is only
# available if the caching backend is a database; otherwise, this setting has
# no effect, and concepts will not be cached.
CACHE_CONCEPTS: false
# Controls whether concepts should be normalized before being cached.
# Normalization increases the chances that a precomputed concept can be used
# again, but is expensive.
NORMALIZE_TPMS: true
# The caching system to use. "fs" means cache the results on the local
# filesystem, in a subdirectory of the current directory; "db" means connect to
# a database and store the results there.
CACHING_BACKEND: "fs"
# The verbosity of filesystem caching (integer from 0 to 11).
FS_CACHE_VERBOSITY: 0
# The directory to use for local persistent caching on the filesystem. This
# only has an effect if the caching backend is the filesystem and not a
# database.
FS_CACHE_DIRECTORY: "__pyphi_cache__"
# These are the settings for the MongoDB database used in the 'db' caching
# backend.
MONGODB_CONFIG:
    host: "localhost"
    port: 27017
    database_name: "pyphi"
    collection_name: "test"

# Logging
# ~~~~~~~
# These are the settings for PyPhi logging.
LOGGING_CONFIG:
    format: "%(asctime)s [%(name)s.%(funcName)s] %(levelname)s: %(message)s"
    # `level` can be "DEBUG", "INFO", "WARNING", "ERROR", or "CRITICAL".
    file:
        enabled: true
        level: "INFO"
        filename: "pyphi.log"
    stdout:
        enabled: true
        level: "INFO"

# Numerical precision
# ~~~~~~~~~~~~~~~~~~~
# The number of decimal places to which Phi values are considered accurate.
PRECISION: 6

# Miscellaneous
# ~~~~~~~~~~~~~
# Controls whether network states are validated upon network creation.
VALIDATE_NETWORK_STATE: false
# In some applications of this library, you may prefer to define single-nodes
# with a self-loop as having 0.5 Phi, a priori.
SINGLE_NODES_WITH_SELFLOOPS_HAVE_PHI: false
